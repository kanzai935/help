<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>導入アドバイザリ on SB Cloud Technical References</title>
    <link>https://sbcloud.github.io/help/advisories/</link>
    <description>Recent content in 導入アドバイザリ on SB Cloud Technical References</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Jun 2019 12:30:18 +0800</lastBuildDate>
    
	<atom:link href="https://sbcloud.github.io/help/advisories/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Terraformを利用する</title>
      <link>https://sbcloud.github.io/help/advisories/terraform/</link>
      <pubDate>Wed, 15 May 2019 10:37:37 +0900</pubDate>
      
      <guid>https://sbcloud.github.io/help/advisories/terraform/</guid>
      <description>本章では Terraform の基本、使い方を学びます。 簡単なWebサーバを立ち上げながら、Terraformの流れや中身を確認します。
3.1 ディレクトリ・ファイル構成 Terraformのファイルの拡張子は *.tf です。 実行時、同じディレクトリの *.tf ファイルがマージされますので、以下3ファイルに分けてそれぞれの用途・目的に応じた記載・運用がベターです。
main.tf … モジュールが内包するリソース、データソースなどの定義 outputs.tf … モジュールが出力するAttributeの定義 variables.tf … モジュールが受け取る変数の定義  main.tf には どのプロパイダを使うかを記載します。 階層化は任意ですが、.tfから別のフォルダの.tfに記載されてる変数を取り出すためにルートディレクトリを指定することがありますのでそこは注意が必要です。apply (=実行) にて分離実行することも可能です。
├── main.tf ├── output.tf ├── variables.tf │ ├── region │├── VPC ││├── main.tf ││├── output.tf ││└── variables.tf ││ │├── ECS ││├── main.tf ││├── output.tf ││└── variables.tf ・ ・ ・  RAMなど他者へ渡したくない情報がある場合、別途設定ファイル（ terraform.confing など）へ記載し、実行時は -var-file引数で 設定ファイルを読み取り実行することができます。
▼リスト 3.1.1 設定ファイル terraform.confing の中身
access_key = &amp;quot;xxxxxxxxxxxxxxxxxx&amp;quot; secret_key = &amp;quot;xxxxxxxxxxxxxxxxxx&amp;quot; region = &amp;quot;ap-northeast-1&amp;quot; zone = &amp;quot;ap-northeast-1a&amp;quot;  記載した設定ファイルterraform.</description>
    </item>
    
  </channel>
</rss>